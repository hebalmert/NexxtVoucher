@model NexxtVoucher.Models.SellTicketOneCachierView

@{
    ViewBag.Title = @Resources.Resource.ViewCreate;
}
<p></p>

@using (Html.BeginForm())
{
    <div class="form-row">
        <div class="col-md-5">
            @Html.AntiForgeryToken()
            <h2> @Resources.Resource.ViewCreate</h2>
            <h4>@Resources.Resource.SellTicket_Model_Titulo</h4>
            <hr />
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card text-white bg-primary col-md-12">
                    <p></p>
                    <div class="form-row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CompanyId)
                        @Html.HiddenFor(model => model.CachierId)
                        @Html.HiddenFor(model => model.ServerId)
                        @Html.HiddenFor(model => model.Date)
                        @Html.HiddenFor(model => model.OrderTicketDetailId)

                        <div class="col-md-12 mb-2">
                            @Html.LabelFor(model => model.VentaCachier, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.VentaCachier, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.VentaCachier, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card bg-light col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-12 mb-2">
                            @Html.LabelFor(model => model.PlanCategoryId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("PlanCategoryId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PlanCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-12 mb-2">
                            @Html.LabelFor(model => model.PlanTicketId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("PlanTicketId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PlanTicketId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-12 mb-2">
                            @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card text-white bg-primary col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-12 mb-2">
                            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="form-row">
                <div class="col-md-12 mb-2">
                    <p></p>
                    <div class="col-md-offset-3 col-md-12">

                        <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Index", new  {})'">
                            <i class="fa fa-backspace"></i>
                            @Resources.Resource.ButtonList
                        </button>

                        <button type="button" class="btn btn-warning btn-sm" onclick="location.href = '@Url.Action("Create", new  {})'">
                            <i class="fa fa-sync-alt"></i>
                            @Resources.Resource.ButtonClear
                        </button>

                        <button type="submit" class="btn btn-primary btn-sm">
                            <i class="fa fa-save"></i>
                            @Resources.Resource.ButtonSave
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">
            $(document).ready(function () {
                $("#PlanTicketId").change(function () {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetTickets")',
                        dataType: 'json',
                        data: { PlanTicketId: $("#PlanTicketId").val(), servidorId: $("#ServerId").val() },
                        success: function (data)
                        {
                            $("#Usuario").val(data.Usuario);
                            $("#OrderTicketDetailId").val(data.OrderTicketDetailId);
                            $("#Precio").val(data.Precio);
                        },
                        error: function (ex) {
                            alert('El Plan no tiene Ticket en Inventario' + ex);
                        }
                    });
                    return false;
                })
            });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#PlanCategoryId").change(function () {
                $("#PlanTicketId").empty();
                $("#PlanTicketId").append('<option value="0">[Select Item...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPlanes")',
                    dataType: 'json',
                    data: { categoryid: $("#PlanCategoryId").val(), servidorId: $("#ServerId").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#PlanTicketId").append('<option value="'
                             + data.PlanTicketId + '">'
                             + data.Plan + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error de Lectura de Relacion' + ex);
                    }
                });
                return false;
            })
        });
    </script>

    @*<script type="text/javascript">
                $(document).ready(function () {
                    $("#PlanTicketId").change(function () {
                        $("#OrderTicketDetailId").empty();
                        $("#OrderTicketDetailId").append('<option value="0">[Select Item...]</option>');
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetTickets")',
                            dataType: 'json',
                            data: { PlanTicketId: $("#PlanTicketId").val(), servidorId: $("#ServerId").val() },
                            success: function (data) {
                                $.each(data, function (i, data) {
                                    $("#OrderTicketDetailId").append('<option value="'
                                     + data.OrderTicketDetailId + '">'
                                     + data.Usuario + '</option>');
                                });
                            },
                            error: function (ex) {
                                alert('Error de Lectura de Relacion' + ex);
                            }
                        });
                        return false;
                    })
                });
        </script>*@

    @*<script type="text/javascript">
                    $(document).ready(function () {
                        $("#OrderTicketDetailId").change(function () {
                            $("#Precio").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetPrecio")',
                                dataType: 'json',
                                data: { orderTicketdetailId: $("#OrderTicketDetailId").val() },
                                success: function (data)
                                {
                                    console.log(data);
                                    $("#Precio").val(data);
                                },
                                error: function (ex) {
                                    alert('Error de Lectura de Relacion' + ex);
                                }
                            });
                            return false;
                        })
                    });
        </script>*@
}
