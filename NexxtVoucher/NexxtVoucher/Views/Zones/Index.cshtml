@*@model IEnumerable<NexxtVoucher.Models.Zone>*@

@model PagedList.IPagedList<NexxtVoucher.Models.Zone>
@using PagedList.Mvc;

@{
    ViewBag.Title = @Resources.Resource.Zone_ViewIndex_Titulo1;
}

<h2>@Resources.Resource.Zone_ViewIndex_Titulo1</h2>

<p>
    <button title=@Resources.Resource.ButtonNew class="btn btn-primary btn-sm" onclick="location.href =
            '@Url.Action("Create", "Zones", new { })'">
        <span class="glyphicon glyphicon-plus"></span> @Resources.Resource.ButtonNew
    </button>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().City.Ciudad)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Zona)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.City.Ciudad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zona)
            </td>
            <td>
                <button title=@Resources.Resource.ButtonEdit class="btn btn-warning btn-sm" onclick="location.href =
                   '@Url.Action("Edit", "Zones", new { id = item.ZoneId})'">
                    <span class="glyphicon glyphicon-pencil"></span>
                </button>

                <button title=@Resources.Resource.ButtonDetail class="btn btn-info btn-sm" onclick="location.href =
                   '@Url.Action("Details", "Zones", new { id = item.ZoneId})'">
                    <span class="glyphicon glyphicon-list"></span>
                </button>

                <button title=@Resources.Resource.ButtonDelete class="btn btn-danger btn-sm" onclick="location.href =
                   '@Url.Action("Delete", "Zones", new { id = item.ZoneId})'">
                    <span class="glyphicon glyphicon-trash"></span>
                </button>
            </td>
        </tr>
    }

</table>

Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), de: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
    ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))