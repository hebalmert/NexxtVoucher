@*@model IEnumerable<NexxtVoucher.Models.Zone>*@

@model PagedList.IPagedList<NexxtVoucher.Models.Zone>
@using PagedList.Mvc;

@{
    ViewBag.Title = @Resources.Resource.Zone_ViewIndex_Titulo1;
}
<p></p>
<h2>@Resources.Resource.Zone_ViewIndex_Titulo1</h2>

<p>
    <button title="" class="btn btn-primary btn-sm" onclick="location.href = '@Url.Action("Create", new { })'">
        <i class="fa fa-plus"></i>
        @Resources.Resource.ButtonNew
    </button>
</p>
<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().City.Ciudad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Zona)
            </th>
            <th></th>
        </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.City.Ciudad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zona)
                </td>
                <td>
                    <button title="Editar" class="btn btn-warning btn-sm" onclick="location.href =
                   '@Url.Action("Edit", new { id = item.ZoneId})'">
                        <i class="fa fa-pencil-alt"></i>
                    </button>

                    <button title="Detalle" class="btn btn-info btn-sm" onclick="location.href =
                   '@Url.Action("Details", new { id = item.ZoneId})'">
                        <i class="fa fa-clipboard-list"></i>
                    </button>

                    <button title="Borrar" class="btn btn-danger btn-sm" onclick="location.href =
                    '@Url.Action("Delete", new { id = item.ZoneId})'">
                        <i class="fa fa-trash"></i>
                    </button>
                </td>
            </tr>
        }

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
         ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    @class = "page-link"
}), new PagedListRenderOptions
{
    FunctionToTransformEachPageLink = (liTag, aTag) =>
    {
        aTag.Attributes.Add("class", "page-link");
            liTag.InnerHtml = aTag.ToString();
            return liTag;
        },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination justify-content-center" }
    })