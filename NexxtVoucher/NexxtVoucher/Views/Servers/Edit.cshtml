@model NexxtVoucher.Models.Server

@{
    ViewBag.Title = "Edit";
}

<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        <div class="col-md-8">
            <h2>@Resources.Resource.ViewCreate</h2>
            <h4>@Resources.Resource.Server_Index_Titulo</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ServerId)
            @Html.HiddenFor(model => model.CompanyId)

            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card text-white bg-primary col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card bg-light col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.IpServer, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.IpServer, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IpServer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card text-white bg-primary col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card bg-light col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <p></p>
            <div class="shadow p-1 mb-1 bg-white rounded">
                <div class="card bg-light col-md-12">
                    <p></p>
                    <div class="form-row">
                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6 mb-2">
                            @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownList("ZoneId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <p></p>
                </div>
            </div>
            <br />
            <div class="form-row">
                <div class="col-md-6 mb-2">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Index", new  {})'">
                            <i class="fa fa-backspace"></i>
                            @Resources.Resource.ButtonBack
                        </button>

                        <button type="submit" class="btn btn-primary btn-sm">
                            <i class="fa fa-save"></i>
                            @Resources.Resource.ButtonSave
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#CityId").change(function () {
                $("#ZoneId").empty();
                $("#ZoneId").append('<option value="0">[Seleccione Zona...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetZone")',
                    dataType: 'json',
                    data: { cityId: $("#CityId").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#ZoneId").append('<option value="'
                             + data.ZoneId + '">'
                             + data.Zona + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error de Lectura de Relacion' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}
