@model NexxtVoucher.Models.OrderTicket

@{
    ViewBag.Title = @Resources.Resource.ViewEdit;
}
    <br />
    <h2>@Resources.Resource.ViewEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Resources.Resource.OrderTicket_Index_Titulo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OrderTicketId)
    @Html.HiddenFor(model => model.CompanyId)

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrdenNumero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrdenNumero, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.OrdenNumero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ServerId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ServerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PlanCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PlanCategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PlanCategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PlanTicketId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PlanTicketId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PlanTicketId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Index", new  {})'">
                <i class="fa fa-backspace"></i>
                @Resources.Resource.ButtonBack
            </button>

            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa fa-save"></i>
                @Resources.Resource.ButtonSave
            </button>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#PlanCategoryId").change(function () {
                $("#PlanTicketId").empty();
                $("#PlanTicketId").append('<option value="0">[Select Item...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPlanes")',
                    dataType: 'json',
                    data: { categoryid: $("#PlanCategoryId").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#PlanTicketId").append('<option value="'
                             + data.PlanTicketId + '">'
                             + data.Plan + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error de Lectura de Relacion' + ex);
                    }
                });
                return false;
            })
        });
    </script>

    <script type="text/javascript">
            $(document).ready(function () {
                $("#PlanTicketId").change(function () {
                    $("#Precio").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetPrecio")',
                        dataType: 'json',
                        data: { planId: $("#PlanTicketId").val() },
                        success: function (data)
                        {
                            console.log(data);
                            $("#Precio").val(data);
                            $("#Cantidad").val("0");
                            $("#Total").val("0");
                        },
                        error: function (ex) {
                            alert('Error de Lectura de Relacion' + ex);
                        }
                    });
                    return false;
                })
            });
    </script>

    <script type="text/javascript">
        $("#Precio, #Cantidad").on("input", function () {
            var val1 = parseInt($('#Precio').val());
            var val2 = parseInt($('#Cantidad').val());

            if (!isNaN(val1) && !isNaN(val2))
                $('#Total').val(val1 * val2);
        });
    </script>
}
