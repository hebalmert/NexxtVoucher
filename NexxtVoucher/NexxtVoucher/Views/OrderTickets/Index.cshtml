@*@model IEnumerable<NexxtVoucher.Models.OrderTicket>*@
@model PagedList.IPagedList<NexxtVoucher.Models.OrderTicket>
@using PagedList.Mvc;
@{
    ViewBag.Title = @Resources.Resource.OrderTicket_Index_Titulo;
}
<br />

<div class="shadow  bg-white rounded">
    <div class="card">
        <div class="card-body">
            <div class="form-row">
                <div class="col-md-6">
                    <p>
                        <h2>Creacion de Tickets</h2>
                    </p>
                    <button type="button" class="btn btn-primary btn-sm" onclick="location.href = '@Url.Action("Create", new  {})'">
                        <i class="fa fa-plus"></i>
                        Nuevo
                    </button>
                    <p></p>
                </div>
                <div class="col-md-6">
                    @using (Html.BeginForm("Index", "OrderTickets"))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-row">
                            <div class="col-md-12 mb-1">
                                <p></p>
                                <p>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                                    <input type="text" name="txt_search" id="txt_search" class="form-control col-md-10" placeholder="Buscar por Nombre" />
                                    <input type="hidden" id="item_list" name="servidorid" /><br />
                                </p>
                                <p>
                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <i class="fa fa-search"></i>
                                        Buscar
                                    </button>
                                </p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<br />

<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().OrdenNumero)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Server.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Plan)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Precio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Cantidad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Mikrotik)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrdenNumero)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Server.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plan)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cantidad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mikrotik)
            </td>
            <td>
                @if (item.Creados == 0)
                {
                    <button title="Editar" class="btn btn-warning btn-sm" onclick="location.href =
                   '@Url.Action("Edit", new { id = item.OrderTicketId})'">
                        <i class="fa fa-pencil-alt"></i>
                    </button>
                }
                <button title="Detalle" class="btn btn-info btn-sm" onclick="location.href =
                   '@Url.Action("Details", new { id = item.OrderTicketId})'">
                    <i class="fa fa-clipboard-list"></i>
                </button>
                @if (item.Creados == 0)
                {
                    <button title="Borrar" class="btn btn-danger btn-sm" onclick="location.href =
                    '@Url.Action("Delete", new { id = item.OrderTicketId})'">
                        <i class="fa fa-trash"></i>
                    </button>
                }
            </td>
        </tr>
    }

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
         ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    @class = "page-link"
}), new PagedListRenderOptions
{
    FunctionToTransformEachPageLink = (liTag, aTag) =>
    {
        aTag.Attributes.Add("class", "page-link");
            liTag.InnerHtml = aTag.ToString();
            return liTag;
        },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination justify-content-center" }
    })

<link href="~/Content/JquerySearch/jquery-ui.css" rel="stylesheet" />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Content/JquerySearch/jquery-1.12.4.js"></script>
    <script src="~/Content/JquerySearch/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#txt_search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/OrderTickets/Search/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#item_list").val(i.item.val);
                },
                minLength: 1
            });

        });
    </script>

}