@model NexxtVoucher.Models.PlanTicket

@{
    ViewBag.Title = @Resources.Resource.ViewCreate;
}

<h2>@Resources.Resource.ViewCreate</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Resource.PlanTicket_Model_Titulo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyId)

        <div class="form-group">
            @Html.LabelFor(model => model.Server.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlanCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PlanCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PlanCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpeedUpId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SpeedUpId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SpeedUpId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpeedDownId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SpeedDownId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SpeedDownId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketTimeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTimeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTimeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketInactiveId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketInactiveId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketInactiveId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketRefreshId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketRefreshId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketRefreshId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShareUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShareUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShareUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaxId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TaxId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detalle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resource.ButtonSave class="btn btn-primary btn-sm" /> |
                @Html.ActionLink(@Resources.Resource.ButtonBack, "Index", new { }, new { @Class = "btn btn-success btn-sm" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ServerId").change(function ()
            {
                $("#PlanCategoryId").empty();
                $("#PlanCategoryId").append('<option value="0">[Select Item...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCategory")',
                    dataType: 'json',
                    data: { ServerId: $("#ServerId").val() },
                    success: function (data)
                    {
                        $.each(data, function (i, data) {
                            $("#PlanCategoryId").append('<option value="'
                             + data.PlanCategoryId + '">'
                             + data.Categoria + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error de Lectura de Relacion' + ex);
                    }
                });
                return false;
            })
        });
    </script>

}
